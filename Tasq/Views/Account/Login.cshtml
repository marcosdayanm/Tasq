@using Tasq.ViewModels
@model LoginVM


<h1>Log In</h1>

@{
    ViewData["Title"] = "Log In";
}


<div class="row">
    <div class="col-md-6 offset-3">
        <p>
            <h4>Inicia Sesión con tu cuenta</h4>
        </p>

        @if (TempData["Error"] != null)@* Ésta es la validación de TempData que pusimos para que el usuario sepa si hubo un error o todo correcto *@
        {
            <div class="col-md-12 alert alert-danger">
                <span><b>Sorry!</b> - @TempData["Error"]</span>
            </div>
        }

        <div class="row">
            <div class="col-md-8 offset-2">
                <form asp-action="Login">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        <input asp-for="Email" class="form-control">
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password" class="control-label"></label>
                        <input asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <br />
                    <div class="form-group">
                        <input class="btn btn-outline-success float right" type="submit" value="Log in" />
                        <a class="btn btn-outline-secondary" asp-controller="Account" asp-action="Register">Cancel</a>
                    </div>
                </form>
                <div>
                    <br />
                    <br />
                    <p>¿Todavía no tienes una cuenta? <a asp-controller="Account" asp-action="Register">¡Regístrate!</a></p>
                </div>
            </div>
        </div>
    </div>
</div>



